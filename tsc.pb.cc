// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tsc.proto

#include "tsc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace tsc {
class UserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<User>
      _instance;
} _User_default_instance_;
class FollowRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FollowRequest>
      _instance;
} _FollowRequest_default_instance_;
class UnfollowRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnfollowRequest>
      _instance;
} _UnfollowRequest_default_instance_;
class FollowReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FollowReply>
      _instance;
} _FollowReply_default_instance_;
class ListReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListReply>
      _instance;
} _ListReply_default_instance_;
}  // namespace tsc
namespace protobuf_tsc_2eproto {
void InitDefaultsUserImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::tsc::_User_default_instance_;
    new (ptr) ::tsc::User();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tsc::User::InitAsDefaultInstance();
}

void InitDefaultsUser() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserImpl);
}

void InitDefaultsFollowRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tsc_2eproto::InitDefaultsUser();
  {
    void* ptr = &::tsc::_FollowRequest_default_instance_;
    new (ptr) ::tsc::FollowRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tsc::FollowRequest::InitAsDefaultInstance();
}

void InitDefaultsFollowRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFollowRequestImpl);
}

void InitDefaultsUnfollowRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tsc_2eproto::InitDefaultsUser();
  {
    void* ptr = &::tsc::_UnfollowRequest_default_instance_;
    new (ptr) ::tsc::UnfollowRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tsc::UnfollowRequest::InitAsDefaultInstance();
}

void InitDefaultsUnfollowRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUnfollowRequestImpl);
}

void InitDefaultsFollowReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::tsc::_FollowReply_default_instance_;
    new (ptr) ::tsc::FollowReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tsc::FollowReply::InitAsDefaultInstance();
}

void InitDefaultsFollowReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFollowReplyImpl);
}

void InitDefaultsListReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tsc_2eproto::InitDefaultsUser();
  {
    void* ptr = &::tsc::_ListReply_default_instance_;
    new (ptr) ::tsc::ListReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tsc::ListReply::InitAsDefaultInstance();
}

void InitDefaultsListReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListReplyImpl);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tsc::User, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tsc::User, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tsc::FollowRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tsc::FollowRequest, user1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tsc::FollowRequest, user2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tsc::UnfollowRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tsc::UnfollowRequest, user1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tsc::UnfollowRequest, user2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tsc::FollowReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tsc::FollowReply, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tsc::ListReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tsc::ListReply, users_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tsc::User)},
  { 6, -1, sizeof(::tsc::FollowRequest)},
  { 13, -1, sizeof(::tsc::UnfollowRequest)},
  { 20, -1, sizeof(::tsc::FollowReply)},
  { 26, -1, sizeof(::tsc::ListReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tsc::_User_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tsc::_FollowRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tsc::_UnfollowRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tsc::_FollowReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tsc::_ListReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "tsc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\ttsc.proto\022\003tsc\"\024\n\004User\022\014\n\004name\030\001 \001(\t\"C"
      "\n\rFollowRequest\022\030\n\005user1\030\001 \001(\0132\t.tsc.Use"
      "r\022\030\n\005user2\030\002 \001(\0132\t.tsc.User\"E\n\017UnfollowR"
      "equest\022\030\n\005user1\030\001 \001(\0132\t.tsc.User\022\030\n\005user"
      "2\030\002 \001(\0132\t.tsc.User\"\036\n\013FollowReply\022\017\n\007mes"
      "sage\030\001 \001(\t\"%\n\tListReply\022\030\n\005users\030\001 \003(\0132\t"
      ".tsc.User2\263\001\n\nTscService\0226\n\014AddToUsersDB"
      "\022\022.tsc.FollowRequest\032\020.tsc.FollowReply\"\000"
      "\022=\n\021RemoveFromUsersDB\022\024.tsc.UnfollowRequ"
      "est\032\020.tsc.FollowReply\"\000\022.\n\017GetAllFollowe"
      "rs\022\t.tsc.User\032\016.tsc.ListReply\"\000B\030\n\003tscB\n"
      "TscServiceP\001\242\002\002TPb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 465);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tsc.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tsc_2eproto
namespace tsc {

// ===================================================================

void User::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int User::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

User::User()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tsc_2eproto::InitDefaultsUser();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tsc.User)
}
User::User(const User& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:tsc.User)
}

void User::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

User::~User() {
  // @@protoc_insertion_point(destructor:tsc.User)
  SharedDtor();
}

void User::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void User::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* User::descriptor() {
  ::protobuf_tsc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tsc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const User& User::default_instance() {
  ::protobuf_tsc_2eproto::InitDefaultsUser();
  return *internal_default_instance();
}

User* User::New(::google::protobuf::Arena* arena) const {
  User* n = new User;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void User::Clear() {
// @@protoc_insertion_point(message_clear_start:tsc.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool User::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tsc.User)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tsc.User.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tsc.User)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tsc.User)
  return false;
#undef DO_
}

void User::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tsc.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tsc.User.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tsc.User)
}

::google::protobuf::uint8* User::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tsc.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tsc.User.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tsc.User)
  return target;
}

size_t User::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tsc.User)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void User::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tsc.User)
  GOOGLE_DCHECK_NE(&from, this);
  const User* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const User>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tsc.User)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tsc.User)
    MergeFrom(*source);
  }
}

void User::MergeFrom(const User& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tsc.User)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void User::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tsc.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void User::CopyFrom(const User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tsc.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool User::IsInitialized() const {
  return true;
}

void User::Swap(User* other) {
  if (other == this) return;
  InternalSwap(other);
}
void User::InternalSwap(User* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata User::GetMetadata() const {
  protobuf_tsc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tsc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FollowRequest::InitAsDefaultInstance() {
  ::tsc::_FollowRequest_default_instance_._instance.get_mutable()->user1_ = const_cast< ::tsc::User*>(
      ::tsc::User::internal_default_instance());
  ::tsc::_FollowRequest_default_instance_._instance.get_mutable()->user2_ = const_cast< ::tsc::User*>(
      ::tsc::User::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FollowRequest::kUser1FieldNumber;
const int FollowRequest::kUser2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FollowRequest::FollowRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tsc_2eproto::InitDefaultsFollowRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tsc.FollowRequest)
}
FollowRequest::FollowRequest(const FollowRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user1()) {
    user1_ = new ::tsc::User(*from.user1_);
  } else {
    user1_ = NULL;
  }
  if (from.has_user2()) {
    user2_ = new ::tsc::User(*from.user2_);
  } else {
    user2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tsc.FollowRequest)
}

void FollowRequest::SharedCtor() {
  ::memset(&user1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user2_) -
      reinterpret_cast<char*>(&user1_)) + sizeof(user2_));
  _cached_size_ = 0;
}

FollowRequest::~FollowRequest() {
  // @@protoc_insertion_point(destructor:tsc.FollowRequest)
  SharedDtor();
}

void FollowRequest::SharedDtor() {
  if (this != internal_default_instance()) delete user1_;
  if (this != internal_default_instance()) delete user2_;
}

void FollowRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FollowRequest::descriptor() {
  ::protobuf_tsc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tsc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FollowRequest& FollowRequest::default_instance() {
  ::protobuf_tsc_2eproto::InitDefaultsFollowRequest();
  return *internal_default_instance();
}

FollowRequest* FollowRequest::New(::google::protobuf::Arena* arena) const {
  FollowRequest* n = new FollowRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FollowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tsc.FollowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && user1_ != NULL) {
    delete user1_;
  }
  user1_ = NULL;
  if (GetArenaNoVirtual() == NULL && user2_ != NULL) {
    delete user2_;
  }
  user2_ = NULL;
  _internal_metadata_.Clear();
}

bool FollowRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tsc.FollowRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tsc.User user1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tsc.User user2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tsc.FollowRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tsc.FollowRequest)
  return false;
#undef DO_
}

void FollowRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tsc.FollowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tsc.User user1 = 1;
  if (this->has_user1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->user1_, output);
  }

  // .tsc.User user2 = 2;
  if (this->has_user2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->user2_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tsc.FollowRequest)
}

::google::protobuf::uint8* FollowRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tsc.FollowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tsc.User user1 = 1;
  if (this->has_user1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->user1_, deterministic, target);
  }

  // .tsc.User user2 = 2;
  if (this->has_user2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->user2_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tsc.FollowRequest)
  return target;
}

size_t FollowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tsc.FollowRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tsc.User user1 = 1;
  if (this->has_user1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->user1_);
  }

  // .tsc.User user2 = 2;
  if (this->has_user2()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->user2_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FollowRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tsc.FollowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FollowRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FollowRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tsc.FollowRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tsc.FollowRequest)
    MergeFrom(*source);
  }
}

void FollowRequest::MergeFrom(const FollowRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tsc.FollowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user1()) {
    mutable_user1()->::tsc::User::MergeFrom(from.user1());
  }
  if (from.has_user2()) {
    mutable_user2()->::tsc::User::MergeFrom(from.user2());
  }
}

void FollowRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tsc.FollowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FollowRequest::CopyFrom(const FollowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tsc.FollowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FollowRequest::IsInitialized() const {
  return true;
}

void FollowRequest::Swap(FollowRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FollowRequest::InternalSwap(FollowRequest* other) {
  using std::swap;
  swap(user1_, other->user1_);
  swap(user2_, other->user2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FollowRequest::GetMetadata() const {
  protobuf_tsc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tsc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnfollowRequest::InitAsDefaultInstance() {
  ::tsc::_UnfollowRequest_default_instance_._instance.get_mutable()->user1_ = const_cast< ::tsc::User*>(
      ::tsc::User::internal_default_instance());
  ::tsc::_UnfollowRequest_default_instance_._instance.get_mutable()->user2_ = const_cast< ::tsc::User*>(
      ::tsc::User::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnfollowRequest::kUser1FieldNumber;
const int UnfollowRequest::kUser2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnfollowRequest::UnfollowRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tsc_2eproto::InitDefaultsUnfollowRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tsc.UnfollowRequest)
}
UnfollowRequest::UnfollowRequest(const UnfollowRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user1()) {
    user1_ = new ::tsc::User(*from.user1_);
  } else {
    user1_ = NULL;
  }
  if (from.has_user2()) {
    user2_ = new ::tsc::User(*from.user2_);
  } else {
    user2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tsc.UnfollowRequest)
}

void UnfollowRequest::SharedCtor() {
  ::memset(&user1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user2_) -
      reinterpret_cast<char*>(&user1_)) + sizeof(user2_));
  _cached_size_ = 0;
}

UnfollowRequest::~UnfollowRequest() {
  // @@protoc_insertion_point(destructor:tsc.UnfollowRequest)
  SharedDtor();
}

void UnfollowRequest::SharedDtor() {
  if (this != internal_default_instance()) delete user1_;
  if (this != internal_default_instance()) delete user2_;
}

void UnfollowRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnfollowRequest::descriptor() {
  ::protobuf_tsc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tsc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnfollowRequest& UnfollowRequest::default_instance() {
  ::protobuf_tsc_2eproto::InitDefaultsUnfollowRequest();
  return *internal_default_instance();
}

UnfollowRequest* UnfollowRequest::New(::google::protobuf::Arena* arena) const {
  UnfollowRequest* n = new UnfollowRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnfollowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tsc.UnfollowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && user1_ != NULL) {
    delete user1_;
  }
  user1_ = NULL;
  if (GetArenaNoVirtual() == NULL && user2_ != NULL) {
    delete user2_;
  }
  user2_ = NULL;
  _internal_metadata_.Clear();
}

bool UnfollowRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tsc.UnfollowRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tsc.User user1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tsc.User user2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tsc.UnfollowRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tsc.UnfollowRequest)
  return false;
#undef DO_
}

void UnfollowRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tsc.UnfollowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tsc.User user1 = 1;
  if (this->has_user1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->user1_, output);
  }

  // .tsc.User user2 = 2;
  if (this->has_user2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->user2_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tsc.UnfollowRequest)
}

::google::protobuf::uint8* UnfollowRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tsc.UnfollowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tsc.User user1 = 1;
  if (this->has_user1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->user1_, deterministic, target);
  }

  // .tsc.User user2 = 2;
  if (this->has_user2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->user2_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tsc.UnfollowRequest)
  return target;
}

size_t UnfollowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tsc.UnfollowRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tsc.User user1 = 1;
  if (this->has_user1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->user1_);
  }

  // .tsc.User user2 = 2;
  if (this->has_user2()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->user2_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnfollowRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tsc.UnfollowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UnfollowRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnfollowRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tsc.UnfollowRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tsc.UnfollowRequest)
    MergeFrom(*source);
  }
}

void UnfollowRequest::MergeFrom(const UnfollowRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tsc.UnfollowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user1()) {
    mutable_user1()->::tsc::User::MergeFrom(from.user1());
  }
  if (from.has_user2()) {
    mutable_user2()->::tsc::User::MergeFrom(from.user2());
  }
}

void UnfollowRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tsc.UnfollowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnfollowRequest::CopyFrom(const UnfollowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tsc.UnfollowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnfollowRequest::IsInitialized() const {
  return true;
}

void UnfollowRequest::Swap(UnfollowRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnfollowRequest::InternalSwap(UnfollowRequest* other) {
  using std::swap;
  swap(user1_, other->user1_);
  swap(user2_, other->user2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnfollowRequest::GetMetadata() const {
  protobuf_tsc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tsc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FollowReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FollowReply::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FollowReply::FollowReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tsc_2eproto::InitDefaultsFollowReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tsc.FollowReply)
}
FollowReply::FollowReply(const FollowReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:tsc.FollowReply)
}

void FollowReply::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

FollowReply::~FollowReply() {
  // @@protoc_insertion_point(destructor:tsc.FollowReply)
  SharedDtor();
}

void FollowReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FollowReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FollowReply::descriptor() {
  ::protobuf_tsc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tsc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FollowReply& FollowReply::default_instance() {
  ::protobuf_tsc_2eproto::InitDefaultsFollowReply();
  return *internal_default_instance();
}

FollowReply* FollowReply::New(::google::protobuf::Arena* arena) const {
  FollowReply* n = new FollowReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FollowReply::Clear() {
// @@protoc_insertion_point(message_clear_start:tsc.FollowReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool FollowReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tsc.FollowReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tsc.FollowReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tsc.FollowReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tsc.FollowReply)
  return false;
#undef DO_
}

void FollowReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tsc.FollowReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tsc.FollowReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tsc.FollowReply)
}

::google::protobuf::uint8* FollowReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tsc.FollowReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tsc.FollowReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tsc.FollowReply)
  return target;
}

size_t FollowReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tsc.FollowReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FollowReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tsc.FollowReply)
  GOOGLE_DCHECK_NE(&from, this);
  const FollowReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FollowReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tsc.FollowReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tsc.FollowReply)
    MergeFrom(*source);
  }
}

void FollowReply::MergeFrom(const FollowReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tsc.FollowReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void FollowReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tsc.FollowReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FollowReply::CopyFrom(const FollowReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tsc.FollowReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FollowReply::IsInitialized() const {
  return true;
}

void FollowReply::Swap(FollowReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FollowReply::InternalSwap(FollowReply* other) {
  using std::swap;
  message_.Swap(&other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FollowReply::GetMetadata() const {
  protobuf_tsc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tsc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListReply::kUsersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListReply::ListReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tsc_2eproto::InitDefaultsListReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tsc.ListReply)
}
ListReply::ListReply(const ListReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      users_(from.users_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tsc.ListReply)
}

void ListReply::SharedCtor() {
  _cached_size_ = 0;
}

ListReply::~ListReply() {
  // @@protoc_insertion_point(destructor:tsc.ListReply)
  SharedDtor();
}

void ListReply::SharedDtor() {
}

void ListReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListReply::descriptor() {
  ::protobuf_tsc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tsc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListReply& ListReply::default_instance() {
  ::protobuf_tsc_2eproto::InitDefaultsListReply();
  return *internal_default_instance();
}

ListReply* ListReply::New(::google::protobuf::Arena* arena) const {
  ListReply* n = new ListReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListReply::Clear() {
// @@protoc_insertion_point(message_clear_start:tsc.ListReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  users_.Clear();
  _internal_metadata_.Clear();
}

bool ListReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tsc.ListReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tsc.User users = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_users()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tsc.ListReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tsc.ListReply)
  return false;
#undef DO_
}

void ListReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tsc.ListReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tsc.User users = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->users_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->users(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tsc.ListReply)
}

::google::protobuf::uint8* ListReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tsc.ListReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tsc.User users = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->users_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->users(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tsc.ListReply)
  return target;
}

size_t ListReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tsc.ListReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tsc.User users = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->users_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->users(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tsc.ListReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ListReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tsc.ListReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tsc.ListReply)
    MergeFrom(*source);
  }
}

void ListReply::MergeFrom(const ListReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tsc.ListReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  users_.MergeFrom(from.users_);
}

void ListReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tsc.ListReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListReply::CopyFrom(const ListReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tsc.ListReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListReply::IsInitialized() const {
  return true;
}

void ListReply::Swap(ListReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListReply::InternalSwap(ListReply* other) {
  using std::swap;
  users_.InternalSwap(&other->users_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListReply::GetMetadata() const {
  protobuf_tsc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tsc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tsc

// @@protoc_insertion_point(global_scope)
