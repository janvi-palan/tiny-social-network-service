// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: tsc.proto
#ifndef GRPC_tsc_2eproto__INCLUDED
#define GRPC_tsc_2eproto__INCLUDED

#include "tsc.pb.h"

#include <grpc++/impl/codegen/async_stream.h>
#include <grpc++/impl/codegen/async_unary_call.h>
#include <grpc++/impl/codegen/method_handler_impl.h>
#include <grpc++/impl/codegen/proto_utils.h>
#include <grpc++/impl/codegen/rpc_method.h>
#include <grpc++/impl/codegen/service_type.h>
#include <grpc++/impl/codegen/status.h>
#include <grpc++/impl/codegen/stub_options.h>
#include <grpc++/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace tsc {

// Interface exported by the server.
class TscService final {
 public:
  static constexpr char const* service_full_name() {
    return "tsc.TscService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status AddToUsersDB(::grpc::ClientContext* context, const ::tsc::FollowRequest& request, ::tsc::FollowReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::tsc::FollowReply>> AsyncAddToUsersDB(::grpc::ClientContext* context, const ::tsc::FollowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::tsc::FollowReply>>(AsyncAddToUsersDBRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::tsc::FollowReply>> PrepareAsyncAddToUsersDB(::grpc::ClientContext* context, const ::tsc::FollowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::tsc::FollowReply>>(PrepareAsyncAddToUsersDBRaw(context, request, cq));
    }
    virtual ::grpc::Status RemoveFromUsersDB(::grpc::ClientContext* context, const ::tsc::UnfollowRequest& request, ::tsc::FollowReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::tsc::FollowReply>> AsyncRemoveFromUsersDB(::grpc::ClientContext* context, const ::tsc::UnfollowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::tsc::FollowReply>>(AsyncRemoveFromUsersDBRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::tsc::FollowReply>> PrepareAsyncRemoveFromUsersDB(::grpc::ClientContext* context, const ::tsc::UnfollowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::tsc::FollowReply>>(PrepareAsyncRemoveFromUsersDBRaw(context, request, cq));
    }
    virtual ::grpc::Status GetAllFollowers(::grpc::ClientContext* context, const ::tsc::User& request, ::tsc::ListReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::tsc::ListReply>> AsyncGetAllFollowers(::grpc::ClientContext* context, const ::tsc::User& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::tsc::ListReply>>(AsyncGetAllFollowersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::tsc::ListReply>> PrepareAsyncGetAllFollowers(::grpc::ClientContext* context, const ::tsc::User& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::tsc::ListReply>>(PrepareAsyncGetAllFollowersRaw(context, request, cq));
    }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::tsc::FollowReply>* AsyncAddToUsersDBRaw(::grpc::ClientContext* context, const ::tsc::FollowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::tsc::FollowReply>* PrepareAsyncAddToUsersDBRaw(::grpc::ClientContext* context, const ::tsc::FollowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::tsc::FollowReply>* AsyncRemoveFromUsersDBRaw(::grpc::ClientContext* context, const ::tsc::UnfollowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::tsc::FollowReply>* PrepareAsyncRemoveFromUsersDBRaw(::grpc::ClientContext* context, const ::tsc::UnfollowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::tsc::ListReply>* AsyncGetAllFollowersRaw(::grpc::ClientContext* context, const ::tsc::User& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::tsc::ListReply>* PrepareAsyncGetAllFollowersRaw(::grpc::ClientContext* context, const ::tsc::User& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status AddToUsersDB(::grpc::ClientContext* context, const ::tsc::FollowRequest& request, ::tsc::FollowReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::tsc::FollowReply>> AsyncAddToUsersDB(::grpc::ClientContext* context, const ::tsc::FollowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::tsc::FollowReply>>(AsyncAddToUsersDBRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::tsc::FollowReply>> PrepareAsyncAddToUsersDB(::grpc::ClientContext* context, const ::tsc::FollowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::tsc::FollowReply>>(PrepareAsyncAddToUsersDBRaw(context, request, cq));
    }
    ::grpc::Status RemoveFromUsersDB(::grpc::ClientContext* context, const ::tsc::UnfollowRequest& request, ::tsc::FollowReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::tsc::FollowReply>> AsyncRemoveFromUsersDB(::grpc::ClientContext* context, const ::tsc::UnfollowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::tsc::FollowReply>>(AsyncRemoveFromUsersDBRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::tsc::FollowReply>> PrepareAsyncRemoveFromUsersDB(::grpc::ClientContext* context, const ::tsc::UnfollowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::tsc::FollowReply>>(PrepareAsyncRemoveFromUsersDBRaw(context, request, cq));
    }
    ::grpc::Status GetAllFollowers(::grpc::ClientContext* context, const ::tsc::User& request, ::tsc::ListReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::tsc::ListReply>> AsyncGetAllFollowers(::grpc::ClientContext* context, const ::tsc::User& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::tsc::ListReply>>(AsyncGetAllFollowersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::tsc::ListReply>> PrepareAsyncGetAllFollowers(::grpc::ClientContext* context, const ::tsc::User& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::tsc::ListReply>>(PrepareAsyncGetAllFollowersRaw(context, request, cq));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientAsyncResponseReader< ::tsc::FollowReply>* AsyncAddToUsersDBRaw(::grpc::ClientContext* context, const ::tsc::FollowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::tsc::FollowReply>* PrepareAsyncAddToUsersDBRaw(::grpc::ClientContext* context, const ::tsc::FollowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::tsc::FollowReply>* AsyncRemoveFromUsersDBRaw(::grpc::ClientContext* context, const ::tsc::UnfollowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::tsc::FollowReply>* PrepareAsyncRemoveFromUsersDBRaw(::grpc::ClientContext* context, const ::tsc::UnfollowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::tsc::ListReply>* AsyncGetAllFollowersRaw(::grpc::ClientContext* context, const ::tsc::User& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::tsc::ListReply>* PrepareAsyncGetAllFollowersRaw(::grpc::ClientContext* context, const ::tsc::User& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_AddToUsersDB_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveFromUsersDB_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAllFollowers_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status AddToUsersDB(::grpc::ServerContext* context, const ::tsc::FollowRequest* request, ::tsc::FollowReply* response);
    virtual ::grpc::Status RemoveFromUsersDB(::grpc::ServerContext* context, const ::tsc::UnfollowRequest* request, ::tsc::FollowReply* response);
    virtual ::grpc::Status GetAllFollowers(::grpc::ServerContext* context, const ::tsc::User* request, ::tsc::ListReply* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_AddToUsersDB : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_AddToUsersDB() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_AddToUsersDB() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddToUsersDB(::grpc::ServerContext* context, const ::tsc::FollowRequest* request, ::tsc::FollowReply* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddToUsersDB(::grpc::ServerContext* context, ::tsc::FollowRequest* request, ::grpc::ServerAsyncResponseWriter< ::tsc::FollowReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveFromUsersDB : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_RemoveFromUsersDB() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_RemoveFromUsersDB() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveFromUsersDB(::grpc::ServerContext* context, const ::tsc::UnfollowRequest* request, ::tsc::FollowReply* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveFromUsersDB(::grpc::ServerContext* context, ::tsc::UnfollowRequest* request, ::grpc::ServerAsyncResponseWriter< ::tsc::FollowReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAllFollowers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetAllFollowers() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetAllFollowers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllFollowers(::grpc::ServerContext* context, const ::tsc::User* request, ::tsc::ListReply* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllFollowers(::grpc::ServerContext* context, ::tsc::User* request, ::grpc::ServerAsyncResponseWriter< ::tsc::ListReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_AddToUsersDB<WithAsyncMethod_RemoveFromUsersDB<WithAsyncMethod_GetAllFollowers<Service > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_AddToUsersDB : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_AddToUsersDB() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_AddToUsersDB() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddToUsersDB(::grpc::ServerContext* context, const ::tsc::FollowRequest* request, ::tsc::FollowReply* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveFromUsersDB : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_RemoveFromUsersDB() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_RemoveFromUsersDB() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveFromUsersDB(::grpc::ServerContext* context, const ::tsc::UnfollowRequest* request, ::tsc::FollowReply* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAllFollowers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetAllFollowers() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetAllFollowers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllFollowers(::grpc::ServerContext* context, const ::tsc::User* request, ::tsc::ListReply* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddToUsersDB : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_AddToUsersDB() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::tsc::FollowRequest, ::tsc::FollowReply>(std::bind(&WithStreamedUnaryMethod_AddToUsersDB<BaseClass>::StreamedAddToUsersDB, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_AddToUsersDB() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddToUsersDB(::grpc::ServerContext* context, const ::tsc::FollowRequest* request, ::tsc::FollowReply* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddToUsersDB(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::tsc::FollowRequest,::tsc::FollowReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveFromUsersDB : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_RemoveFromUsersDB() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::tsc::UnfollowRequest, ::tsc::FollowReply>(std::bind(&WithStreamedUnaryMethod_RemoveFromUsersDB<BaseClass>::StreamedRemoveFromUsersDB, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_RemoveFromUsersDB() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveFromUsersDB(::grpc::ServerContext* context, const ::tsc::UnfollowRequest* request, ::tsc::FollowReply* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveFromUsersDB(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::tsc::UnfollowRequest,::tsc::FollowReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAllFollowers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetAllFollowers() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::tsc::User, ::tsc::ListReply>(std::bind(&WithStreamedUnaryMethod_GetAllFollowers<BaseClass>::StreamedGetAllFollowers, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetAllFollowers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAllFollowers(::grpc::ServerContext* context, const ::tsc::User* request, ::tsc::ListReply* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAllFollowers(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::tsc::User,::tsc::ListReply>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_AddToUsersDB<WithStreamedUnaryMethod_RemoveFromUsersDB<WithStreamedUnaryMethod_GetAllFollowers<Service > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_AddToUsersDB<WithStreamedUnaryMethod_RemoveFromUsersDB<WithStreamedUnaryMethod_GetAllFollowers<Service > > > StreamedService;
};

}  // namespace tsc


#endif  // GRPC_tsc_2eproto__INCLUDED
